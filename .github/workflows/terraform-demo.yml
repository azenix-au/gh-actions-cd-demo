name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

jobs:
  terraform_plan:
    name: terraform_plan

    runs-on: ubuntu-latest
    environment: dev-infrastructure-plan

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.8

    - name: Terraform Format
      working-directory: ./terraform
      run: terraforn fmt

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: 'Terraform Validate'
      working-directory: ./terraform
      run: terraform validate

    - name: 'Terraform Plan'
      working-directory: ./terraform
      run: terraform plan

  terraform_apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    environment: dev-infrastructure-apply
    needs: terraform_plan
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.8

    - name: Terraform Init
      if: github.ref == 'refs/heads/main'
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      working-directory: ./terraform
      run: terraform apply -auto-approve