name: Push to ACR
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

env:
  RESOURCE_GROUP: phall-github-actions
  WEBAPP_NAME: phall-ghpopular-repos

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup node 12
      uses: actions/setup-node@v2-beta
      with:
        node-version: '12.x'

    - name: Cache node modules
      id: cache-node
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      if: steps.cache-node.outputs.cache-hit != 'true'
      run: |
        npm install --silent

    - name: Build site
      run:  npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1


    - name: Login to Azure Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{secrets.AZURE_REGISTRY_NAME}}
        username: ${{secrets.AZURE_REGISTRY_USER}}
        password: ${{secrets.AZURE_REGISTRY_PASS}}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{secrets.GITHUB_TOKEN}}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: |
          ${{ secrets.AZURE_REGISTRY_NAME }}/popular-repos
          ghcr.io/popular-repos
        tags: |
            type=sha,event=pr,prefix=
            type=sha,event=branch,prefix=

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ secrets.AZURE_REGISTRY_NAME }}/popular-repos:latest
        cache-to: type=inline

  deploy_to_Dev:
    name: Dev
    runs-on: ubuntu-latest
    environment:
      name: Dev
      url: ${{ steps.popular-repos-web.outputs.webapp-url }}
    needs: build
    steps:
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create deployment slot
      run: |
        az webapp deployment slot create --name ${{env.WEBAPP_NAME}} --resource-group ${{env.RESOURCE_GROUP}} --slot review-pr-${{ github.event.number }} --configuration-source ${{env.WEBAPP_NAME}}

    - name: Deploy popular repos
      uses: azure/webapps-deploy@v2
      id: popular-repos-web
      with:
        app-name: ${{env.WEBAPP_NAME}}
        images: '${{ secrets.AZURE_REGISTRY_NAME }}/popular-repos:${{ github.event.pull_request.head.sha }}'
        slot-name: review-pr-${{ github.event.number }}

  deploy_to_staging:
    name: Deploy Staging
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: ${{ steps.popular-repos-web.outputs.webapp-url }}
    needs: deploy_to_Dev
    steps:
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create deployment slot
      run: |
        az webapp deployment slot create --name ${{env.WEBAPP_NAME}} --resource-group ${{env.RESOURCE_GROUP}} --slot staging --configuration-source ${{env.WEBAPP_NAME}}

    - name: Deploy popular repos
      uses: azure/webapps-deploy@v2
      id: popular-repos-web
      with:
        app-name: ${{env.WEBAPP_NAME}}
        images: '${{ secrets.AZURE_REGISTRY_NAME }}/popular-repos:${{ github.event.pull_request.head.sha }}'
        slot-name: staging

